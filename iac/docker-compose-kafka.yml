---
services:
    # Do cấu hình chỉ 1 broker nên các nhân bản phải đưa hết về 1
    controller-1:
        image: confluentinc/cp-server:7.7.0
        hostname: controller-1
        container_name: controller-1

        environment:
            KAFKA_NODE_ID: 1
            CLUSTER_ID: Nk018hRAQFytWskYqtQduw
            KAFKA_PROCESS_ROLES: controller
            KAFKA_LISTENERS: CONTROLLER://controller-1:19091
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: CONTROLLER
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:19091
            # Cổng JMX (Java Management Extensions) mà kafka sử dụng cho phép các công cụ giá sát truyền thống như JConsole hoặc VisualVM để lấy các số liệu như CPU usage, mem, Kafka metrics, ...
            # Do dùng giao diện kafkaui - provectus thậm chí cả confluent control center thì vẫn phải bật cái này nên để nó lấy metric
            KAFKA_JMX_PORT: 10001
            KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=controller-1 -Dcom.sun.management.jmxremote.rmi.port=10001
            KAFKA_JMX_HOSTNAME: controller-1
            KAFKA_BROKER_RACK: rack-0
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_DURABILITY_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_TIER_METADATA_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            # Cổng 8091: (Prometheus JMX Exporter),là 1 agent đặc biệt để chuyển đổi các số liệu JMX thành định dạng Prometheus phục vụ Prometheus. Mà do đã xóa Prometheus và Grafana rồi nên không cần trường này
            KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: False
        cap_add:
            - NET_ADMIN
        ports:
            - 19091:19091
        volumes:
            - ./config/kafka/kafka_config.yml:/tmp/kafka_config.yml
            - kafka-controller-data:/var/lib/kafka/data
        networks:
            - bigdata

    kafka-1:
        image: confluentinc/cp-server:7.7.0
        hostname: kafka-1
        container_name: kafka-1

        healthcheck:
            test: curl -fail --silent http://kafka-1:8090/kafka/v3/clusters/ --output /dev/null || exit 1
            interval: 10s
            retries: 10
            start_period: 20s
        depends_on:
            - controller-1
        environment:
            KAFKA_LISTENERS: PLAINTEXT://kafka-1:19092, EXTERNAL://0.0.0.0:9091
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092, EXTERNAL://localhost:9091
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_JMX_PORT: 10001
            KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka-1 -Dcom.sun.management.jmxremote.rmi.port=10001
            KAFKA_BROKER_RACK: rack-0
            KAFKA_MIN_INSYNC_REPLICAS: 1
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_DURABILITY_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_TIER_METADATA_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE: False
            KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: False
            KAFKA_NODE_ID: 2
            CLUSTER_ID: Nk018hRAQFytWskYqtQduw
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:19091
            KAFKA_PROCESS_ROLES: broker
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        cap_add:
            - NET_ADMIN
        ports:
            - 9091:9091
            # Bản thân kafka cũng có 1 rest api để tương tác, cổng 8090 là cổng mặc định mở rest api của kafka.
            # - 8090:8090
        volumes:
            - ./config/kafka/kafka_config.yml:/tmp/kafka_config.yml
            - kafka-broker-data:/var/lib/kafka/data
        networks:
            - bigdata

    schema-registry-1:
        image: confluentinc/cp-schema-registry:7.7.0
        hostname: schema-registry-1
        container_name: schema-registry-1

        healthcheck:
            test: curl -fail --silent http://schema-registry-1:8081/subjects --output /dev/null || exit 1
            interval: 10s
            retries: 20
            start_period: 20s
        depends_on:
            kafka-1:
                condition: service_healthy
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry-1
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-1:19092
            SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
        ports:
            - 8081:8081
        volumes:
            - ./config/kafka/schema-registry.yml:/tmp/schema-registry.yml
        networks:
            - bigdata

    kafka-connect-1:
        image: confluentinc/cp-server-connect:7.7.0
        hostname: kafka-connect-1
        container_name: kafka-connect-1

        healthcheck:
            test: curl -fail --silent http://kafka-connect-1:8083/connectors --output /dev/null || exit 1
            interval: 10s
            retries: 20
            start_period: 20s
        depends_on:
            kafka-1:
                condition: service_healthy
            schema-registry-1:
                condition: service_healthy
        environment:
            CONNECT_REST_ADVERTISED_PORT: 8083
            CONNECT_REST_PORT: 8083
            CONNECT_LISTENERS: http://0.0.0.0:8083
            CONNECT_BOOTSTRAP_SERVERS: kafka-1:19092
            CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect-1
            CONNECT_GROUP_ID: kafka-connect
            CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
            CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
            CONNECT_STATUS_STORAGE_TOPIC: _connect-status
            CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_EXACTLY_ONCE_SOURCE_SUPPORT: enabled
            CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry-1:8081
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry-1:8081
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-plugin-jars
        ports:
            - 8083:8083
        volumes:
            - ./config/kafka/jmx_prometheus_javaagent-0.20.0.jar:/tmp/jmx_prometheus_javaagent-0.20.0.jar
            - ./config/kafka/kafka_connect.yml:/tmp/kafka_connect.yml
            - ./config/kafka/connect-plugin-jars:/data/connect-plugin-jars
        networks:
            - bigdata
    
    ksqldb-1:
        image: confluentinc/cp-ksqldb-server:7.7.0
        hostname: ksqldb-1
        container_name: ksqldb-1

        healthcheck:
            test: curl -fail --silent http://ksqldb-1:8088/healthcheck --output /dev/null || exit 1
            interval: 10s
            retries: 20
            start_period: 20s
        depends_on:
            kafka-1:
                condition: service_healthy
            schema-registry-1:
                condition: service_healthy
            kafka-connect-1:
                condition: service_healthy
        environment:
            KSQL_LISTENERS: http://0.0.0.0:8088
            KSQL_BOOTSTRAP_SERVERS: kafka-1:19092
            KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: true
            KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: true
            KSQL_KSQL_CONNECT_URL: http://kafka-connect-1:8083
            KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry-1:8081
            KSQL_KSQL_SERVICE_ID: kafka-docker-composer
            KSQL_KSQL_HIDDEN_TOPICS: ^_.*
            KSQL_KSQL_INTERNAL_TOPICS_REPLICAS: 1
            KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
        ports:
            - 8088:8088
        networks:
            - bigdata

    kafka-ui:
        hostname: kafka-ui
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
            - 9021:8080
        depends_on:
            kafka-1:
                condition: service_healthy
            schema-registry-1:
                condition: service_healthy
            kafka-connect-1:
                condition: service_healthy
        environment:
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:19092
            KAFKA_CLUSTERS_0_METRICS_PORT: 10001
            KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry-1:8081
            KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
            KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect-1:8083
            DYNAMIC_CONFIG_ENABLED: 'true'
        networks:
            - bigdata

volumes:
    kafka-controller-data:
    kafka-broker-data:

networks:
    bigdata:
        external: true